{% block map %}
    <script type="text/javascript">
    	let questionmarker = L.AwesomeMarkers.icon({
            prefix: 'fa',
            icon: "question",
            markerColor: "orange"
        });

        let addmarker = "";

        let map = L.map('mapid');
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'pk.eyJ1IjoiYW5hY29tYiIsImEiOiJjazltdG82d2EwMnp5M21scGc1cWdtOGM3In0.WbSl0RvM9KcZkU3C4EDrug'
        }).addTo(map);
        
        let centre = JSON.parse(document.getElementById("mapid").dataset.centre).reverse();
		map.setView(centre, 13);

        let contour = JSON.parse(document.getElementById("mapid").dataset.contour);

        let feature = {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": contour
            }
        };

        let featureStyle = {
            "color": "#000",
            "weight": 0.8,
            "opacity": 0.8,
            "fillOpacity": 0.1
        };

        L.geoJSON(feature, {
            style: featureStyle      
        }).addTo(map);

        let problemes = JSON.parse(document.getElementById("mapid").dataset.problemes);

        let legendComponents = new Map();

        for(probleme of problemes){
            let markerstyle = L.AwesomeMarkers.icon({
                prefix: 'fa',
                icon: probleme.marker_icone ? probleme.marker_icone : "times-circle",
                markerColor: probleme.marker_color
            });
            legendComponents.set(probleme.nom_categorie, [probleme.marker_color, probleme.marker_icone]);
            let marker = L.marker(probleme.coordonnees, {icon: markerstyle}).addTo(map);
            marker.bindPopup('<b>' + probleme.titre + '</b></br><i>' + probleme.statut + '</i></br><a href="/probleme/'+ probleme.id +'/show">Voir le problème</a>');
        }

        let legend = L.control({position: 'bottomleft'});

        legend.onAdd = function (map) {

            let div = L.DomUtil.create('div', 'info legend');

            legendComponents.forEach(function(value, key){
                div.innerHTML += "<div><i style='"+getColor(value[0])+"' class='fa fa-"+value[1]+"'></i>" + key + "</div>";
            });

            return div;
        };

        legend.addTo(map);

		map.on('click', function(e){
			if(addmarker) addmarker.remove(map);
			addmarker = L.marker(e.latlng, {icon: questionmarker}).addTo(map);
			addmarker.bindPopup('<b>Ajouter un nouveau <a href="/probleme/new?lat=' + e.latlng.lat + '&lng=' + e.latlng.lng + '" data-toggle="modal" data-target="#modal">problème</a> ici ?').openPopup();
		});

        function getColor($color){
            switch ($color) {
                case "red":
                    return "background: #d63e2a; color: white";
                case "darkred":
                    return "background: #a13336; color: white";
                case "orange":
                    return "background: #f0932f; color: white";
                case "green":
                    return "background: #72af26; color: white";
                case "darkgreen":
                    return "background: #728224; color: white";
                case "blue":
                    return "background: #38aadd; color: white";
                case "darkblue":
                    return "background: #0067a3; color: white";
                case "purple":
                    return "background: #d252b9; color: white";
                case "darkpurple":
                    return "background: #5b396b; color: white";
                case "cadetblue":
                    return "background: #436978; color: white";
            }
        }
	</script>
{% endblock %}