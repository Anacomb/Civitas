{% extends 'base.html.twig' %}

{% block title %}Civitas Home{% endblock %}

{% block body %}

{% if is_granted('ROLE_USER') %}
    <div id="mapid" class="fill" data-longitude="{{ coordonnees.longitude }}" data-latitude="{{ coordonnees.latitude }}" data-problemes="{{ problemes|json_encode|e('html_attr') }}"</div>
{% else %}
    <div class="fill">
        <div class="container">
            <a href="/login" type="button" style="margin-top:25%;" class="btn btn-success btn-lg btn-block">Se connecter <i class="fa fa-user"></i></a>
        </div>
    </div>
{% endif %}

{% endblock %}

{% block map %}
	<script type="text/javascript">
        var map = L.map('mapid');
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'pk.eyJ1IjoiYW5hY29tYiIsImEiOiJjazltdG82d2EwMnp5M21scGc1cWdtOGM3In0.WbSl0RvM9KcZkU3C4EDrug'
        }).addTo(map);
        function onLocationFound(e) {
			var radius = e.accuracy / 4;
			L.circle(e.latlng, radius).addTo(map);
		}

		function onLocationError(e) {
            let coordonnees = document.getElementById("mapid");
            let longitude = coordonnees.dataset.longitude;
            let latitude = coordonnees.dataset.latitude;
			map.setView([latitude, longitude], 13);
		}

		map.on('locationfound', onLocationFound);
		map.on('locationerror', onLocationError);

        let problemes = JSON.parse(document.getElementById("mapid").dataset.problemes);

        for(probleme of problemes){
            let markerstyle = L.AwesomeMarkers.icon({
                prefix: 'fa',
                icon: probleme.marker_icone ? probleme.marker_icone : "times-circle",
                markerColor: probleme.marker_color
            });
            let marker = L.marker(probleme.coordonnees, {icon: markerstyle}).addTo(map);
            marker.bindPopup('<b>' + probleme.titre + '</b></br><i>' + probleme.statut + '</i></br><a href="/probleme/'+ probleme.id +'">Voir le problème</a>');
        }

		map.locate({setView: true, maxZoom: 16});
	</script>
{% endblock %}