{% block map %}
    <script type="text/javascript">
    	let questionmarker = L.AwesomeMarkers.icon({
            prefix: 'fa',
            icon: "question",
            markerColor: "orange"
        });

        let addmarker = "";

        let map = L.map('mapid');
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'pk.eyJ1IjoiYW5hY29tYiIsImEiOiJjazltdG82d2EwMnp5M21scGc1cWdtOGM3In0.WbSl0RvM9KcZkU3C4EDrug'
        }).addTo(map);
        
        let centre = JSON.parse(document.getElementById("mapid").dataset.centre).reverse();
		map.setView(centre, 13);

        let contour = JSON.parse(document.getElementById("mapid").dataset.contour);

        let statuts = JSON.parse(document.getElementById("mapid").dataset.statuts);

        let feature = {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": contour
            }
        };

        let featureStyle = {
            "color": "#000",
            "weight": 0.8,
            "opacity": 0.8,
            "fillOpacity": 0.1
        };

        L.geoJSON(feature, {
            style: featureStyle      
        }).addTo(map);

        let problemes = JSON.parse(document.getElementById("mapid").dataset.problemes);

        let layers = new Map();

        for(let statut of statuts){
            let list = [];
            for(let probleme of problemes){
                if(probleme.statut === statut){
                    let markerstyle = L.AwesomeMarkers.icon({
                        prefix: 'fa',
                        icon: probleme.marker_icone ? probleme.marker_icone : "times-circle",
                        markerColor: probleme.marker_color
                    });
                    let marker = L.marker(probleme.coordonnees, {icon: markerstyle});
                    marker.bindPopup('<b>' + probleme.titre + '</b>');
                    
                    list.push(marker);                    
                }
            }
            if(list.length!=0) layers.set(statut, L.layerGroup(list));
        }

        let overlays = {};

        layers.forEach( function(value, key) {
            let newkey = "<span class='text-primary font-weight-bold' style='font-size:15px;'>"+key+"</span>";
            overlays[newkey] = value;
        });

        L.control.layers(null, overlays, {
            collapsed:false
        }).addTo(map);

		map.locate({setView: true, maxZoom: 16});

		map.on('click', function(e){
			//a faire
		});
	</script>
{% endblock %}